<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.plou.web.charge.heatingmanage.dao.HeatCheckDetailMapper">
  <resultMap id="BaseResultMap" type="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="primary_id"  property="primaryId" />
    <result column="annual"  property="annual" />
    <result column="consumer_id"  property="consumerId" />
    <result column="company_id"  property="companyId" />
    <result column="heating_status"  property="heatingStatus" />
    <result column="seal_area" jdbcType="DECIMAL" property="sealArea" />
    <result column="task_type"  property="taskType" />
    <result column="task_date" jdbcType="DATE" property="taskDate" />
    <result column="execut_dept"  property="executDept" />
    <result column="execut_person"  property="executPerson" />
    <result column="execut_content"  property="executContent" />
    <result column="user_name"  property="userName" />
    <result column="user_telephone"  property="userTelephone" />
    <result column="execut_person_name"  property="executPersonName" />
    <result column="execut_record"  property="executRecord" />
    <result column="execut_time" jdbcType="DATE" property="executTime" />
    <result column="inspection_conclusion"  property="inspectionConclusion" />
    <result column="repair_person"  property="repairPerson" />
    <result column="notes"  property="notes" />
    <result column="create_date"  property="createDate" />
    <result column="create_user" jdbcType="DATE" property="createUser" />
    <result column="update_date"  property="updateDate" />
    <result column="update_user" jdbcType="DATE" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    primary_id, annual, consumer_id, company_id, heating_status, seal_area, task_type, 
    task_date, execut_dept, execut_person, execut_content, user_name, user_telephone, 
    execut_person_name, execut_record, execut_time, inspection_conclusion, repair_person, 
    notes, create_date, create_user, update_date, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from heat_check_detail
    where primary_id = #{primaryId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from heat_check_detail
    where primary_id = #{primaryId}
  </delete>
  <insert id="insert" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into heat_check_detail (primary_id, annual, consumer_id, 
      company_id, heating_status, seal_area, 
      task_type, task_date, execut_dept, 
      execut_person, execut_content, user_name, 
      user_telephone, execut_person_name, execut_record, 
      execut_time, inspection_conclusion, repair_person, 
      notes, create_date, create_user, 
      update_date, update_user)
    values (#{primaryId}, #{annual}, #{consumerId}, 
      #{companyId}, #{heatingStatus}, #{sealArea,jdbcType=DECIMAL}, 
      #{taskType}, #{taskDate}, #{executDept}, 
      #{executPerson}, #{executContent}, #{userName}, 
      #{userTelephone}, #{executPersonName}, #{executRecord},
      #{executTime}, #{inspectionConclusion}, #{repairPerson}, 
      #{notes}, #{createDate}, #{createUser}, 
      #{updateDate}, #{updateUser})
  </insert>
  <insert id="insertSelective" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into heat_check_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="primaryId != null">
        primary_id,
      </if>
      <if test="annual != null">
        annual,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="heatingStatus != null">
        heating_status,
      </if>
      <if test="sealArea != null">
        seal_area,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskDate != null">
        task_date,
      </if>
      <if test="executDept != null">
        execut_dept,
      </if>
      <if test="executPerson != null">
        execut_person,
      </if>
      <if test="executContent != null">
        execut_content,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userTelephone != null">
        user_telephone,
      </if>
      <if test="executPersonName != null">
        execut_person_name,
      </if>
      <if test="executRecord != null">
        execut_record,
      </if>
      <if test="executTime != null">
        execut_time,
      </if>
      <if test="inspectionConclusion != null">
        inspection_conclusion,
      </if>
      <if test="repairPerson != null">
        repair_person,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="primaryId != null">
        #{primaryId},
      </if>
      <if test="annual != null">
        #{annual},
      </if>
      <if test="consumerId != null">
        #{consumerId},
      </if>
      <if test="companyId != null">
        #{companyId},
      </if>
      <if test="heatingStatus != null">
        #{heatingStatus},
      </if>
      <if test="sealArea != null">
        #{sealArea,jdbcType=DECIMAL},
      </if>
      <if test="taskType != null">
        #{taskType},
      </if>
      <if test="taskDate != null">
        #{taskDate},
      </if>
      <if test="executDept != null">
        #{executDept},
      </if>
      <if test="executPerson != null">
        #{executPerson},
      </if>
      <if test="executContent != null">
        #{executContent},
      </if>
      <if test="userName != null">
        #{userName},
      </if>
      <if test="userTelephone != null">
        #{userTelephone},
      </if>
      <if test="executPersonName != null">
        #{executPersonName},
      </if>
      <if test="executRecord != null">
        #{executRecord},
      </if>
      <if test="executTime != null">
        #{executTime},
      </if>
      <if test="inspectionConclusion != null">
        #{inspectionConclusion},
      </if>
      <if test="repairPerson != null">
        #{repairPerson},
      </if>
      <if test="notes != null">
        #{notes},
      </if>
      <if test="createDate != null">
        #{createDate},
      </if>
      <if test="createUser != null">
        #{createUser},
      </if>
      <if test="updateDate != null">
        #{updateDate},
      </if>
      <if test="updateUser != null">
        #{updateUser},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update heat_check_detail
    <set>
      <if test="annual != null">
        annual = #{annual},
      </if>
      <if test="consumerId != null">
        consumer_id = #{consumerId},
      </if>
      <if test="companyId != null">
        company_id = #{companyId},
      </if>
      <if test="heatingStatus != null">
        heating_status = #{heatingStatus},
      </if>
      <if test="sealArea != null">
        seal_area = #{sealArea,jdbcType=DECIMAL},
      </if>
      <if test="taskType != null">
        task_type = #{taskType},
      </if>
      <if test="taskDate != null">
        task_date = #{taskDate},
      </if>
      <if test="executDept != null">
        execut_dept = #{executDept},
      </if>
      <if test="executPerson != null">
        execut_person = #{executPerson},
      </if>
      <if test="executContent != null">
        execut_content = #{executContent},
      </if>
      <if test="userName != null">
        user_name = #{userName},
      </if>
      <if test="userTelephone != null">
        user_telephone = #{userTelephone},
      </if>
      <if test="executPersonName != null">
        execut_person_name = #{executPersonName},
      </if>
      <if test="executRecord != null">
        execut_record = #{executRecord},
      </if>
      <if test="executTime != null">
        execut_time = #{executTime},
      </if>
      <if test="inspectionConclusion != null">
        inspection_conclusion = #{inspectionConclusion},
      </if>
      <if test="repairPerson != null">
        repair_person = #{repairPerson},
      </if>
      <if test="notes != null">
        notes = #{notes},
      </if>
      <if test="createDate != null">
        create_date = #{createDate},
      </if>
      <if test="createUser != null">
        create_user = #{createUser},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser},
      </if>
    </set>
    where primary_id = #{primaryId}
  </update>

  <update id="updateByConsumerIdSelective" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    update heat_check_detail
    <set>
      <if test="annual != null">
        annual = #{annual},
      </if>
      <if test="companyId != null">
        company_id = #{companyId},
      </if>
      <if test="heatingStatus != null">
        heating_status = #{heatingStatus},
      </if>
      <if test="sealArea != null">
        seal_area = #{sealArea,jdbcType=DECIMAL},
      </if>
      <if test="taskType != null">
        task_type = #{taskType},
      </if>
      <if test="taskDate != null">
        task_date = #{taskDate},
      </if>
      <if test="executDept != null">
        execut_dept = #{executDept},
      </if>
      <if test="executPerson != null">
        execut_person = #{executPerson},
      </if>
      <if test="executContent != null">
        execut_content = #{executContent},
      </if>
      <if test="userName != null">
        user_name = #{userName},
      </if>
      <if test="userTelephone != null">
        user_telephone = #{userTelephone},
      </if>
      <if test="executPersonName != null">
        execut_person_name = #{executPersonName},
      </if>
      <if test="executRecord != null">
        execut_record = #{executRecord},
      </if>
      <if test="executTime != null">
        execut_time = #{executTime},
      </if>
      <if test="inspectionConclusion != null">
        inspection_conclusion = #{inspectionConclusion},
      </if>
      <if test="repairPerson != null">
        repair_person = #{repairPerson},
      </if>
      <if test="notes != null">
        notes = #{notes},
      </if>
      <if test="createDate != null">
        create_date = #{createDate},
      </if>
      <if test="createUser != null">
        create_user = #{createUser},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser},
      </if>
    </set>
    where consumer_id = #{consumerId}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update heat_check_detail
    set annual = #{annual},
      consumer_id = #{consumerId},
      company_id = #{companyId},
      heating_status = #{heatingStatus},
      seal_area = #{sealArea,jdbcType=DECIMAL},
      task_type = #{taskType},
      task_date = #{taskDate},
      execut_dept = #{executDept},
      execut_person = #{executPerson},
      execut_content = #{executContent},
      user_name = #{userName},
      user_telephone = #{userTelephone},
      execut_person_name = #{executPersonName},
      execut_record = #{executRecord},
      execut_time = #{executTime},
      inspection_conclusion = #{inspectionConclusion},
      repair_person = #{repairPerson},
      notes = #{notes},
      create_date = #{createDate},
      create_user = #{createUser},
      update_date = #{updateDate},
      update_user = #{updateUser}
    where primary_id = #{primaryId}
  </update>
    <select id="find" resultType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">

      select  <include refid="Base_Column_List"/>
      from heat_check_detail
      where  1=1
      <if test="detail.annual != null">
      and    annual = #{detail.annual}
      </if>
      <if test="detail.companyId != null">
        and   company_id = #{detail.companyId}
      </if>
      <if test="detail.consumerId != null">
        and   consumer_id = #{detail.consumerId}
      </if>
      <if test="detail.heatingStatus != null">
        and   heating_status = #{detail.heatingStatus}
      </if>
      <if test="detail.sealArea != null">
        and  seal_area = #{detail.sealArea,jdbcType=DECIMAL}
      </if>
      <if test="detail.taskType != null">
        and   task_type = #{detail.taskType}
      </if>
      <if test="detail.taskDate != null">
        and   task_date = #{detail.taskDate}
      </if>
      <if test="detail.executDept != null">
        and   execut_dept = #{detail.executDept}
      </if>
      <if test="detail.executPerson != null">
        and   execut_person = #{detail.executPerson}
      </if>
      <if test="detail.executContent != null">
        and   execut_content = #{detail.executContent}
      </if>
      <if test="detail.userName != null">
        and   user_name = #{detail.userName}
      </if>
      <if test="detail.userTelephone != null">
        and   user_telephone = #{detail.userTelephone}
      </if>
      <if test="detail.executPersonName != null">
        and   execut_person_name = #{detail.executPersonName}
      </if>
      <if test="detail.executRecord != null">
        and   execut_record = #{detail.executRecord}
      </if>
      <if test="detail.executTime != null">
        and   execut_time = #{detail.executTime}
      </if>
      <if test="detail.inspectionConclusion != null">
        and   inspection_conclusion = #{detail.inspectionConclusion}
      </if>
      <if test="detail.repairPerson != null">
        and   repair_person = #{detail.repairPerson}
      </if>


      <if test="beginCreateDate != null and  endCreateDate != null">
        and   create_date between(#{beginCreateDate},#{endCreateDate})
      </if>
      <if test="base.sortby != null   and  base.sortby != ''">
        order by ${sortby}
      </if>

      <if test="base.order != null  and  base.order != ''">
        ${order}
      </if>


      /*Param("beginCreateDate")String beginCreateDate, @Param("endCreateDate")*/
    </select>

<!--auto generated by codehelper on 2018-09-12-->
	<select id="findByConsumerIdAndCompanyIdAndAnnual" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from heat_check_detail
    where consumer_id=#{consumerId} and company_id=#{companyId} and annual=#{annual}
  </select>
  <update id="updateHeatingStatus" parameterType="cn.plou.web.charge.heatingmanage.domain.HeatCheckDetail">
    update heat_check_detail
    set heating_status = #{heatingStatus},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser}
    where consumer_id = #{consumerId} and
          company_id = #{companyId} and
          annual = #{annual}
  </update>


  <!-- ————————————————————————————————cache配置————————————————————————————  -->
  <cache eviction="FIFO" flushInterval="60000" size="1024"  readOnly="true"/>
</mapper>