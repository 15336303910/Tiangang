package cn.plou.web.charge.heatingmanage.controller;

import cn.plou.web.charge.chargeconfig.util.MoneyConverter;
import cn.plou.web.charge.heatingmanage.dto.*;
import cn.plou.web.charge.heatingmanage.service.HeatingServeService;
import cn.plou.web.charge.heatingmanage.vo.HeatingServeDepartmentVO;
import cn.plou.web.charge.heatingmanage.vo.HeatingServeListVO;
import cn.plou.web.charge.heatingmanage.vo.HeatingServeUserListVO;
import cn.plou.web.charge.heatingmanage.vo.HeatingServeVO;
import cn.plou.web.common.config.common.Root;
import cn.plou.web.common.exception.BindingResultHandler;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.math.BigDecimal;
import java.util.List;

import static cn.plou.web.common.config.common.Cond.getCond;

/**
 * @ClassName: HeatingServeController
 * @Description: 供热服务
 * @Author: youbc
 * @Date 2018-08-15 15:55
 */
@RestController
@RequestMapping("${chargePath}/heating-manage/heating-serve/")
public class HeatingServeController {

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private HeatingServeService heatingServeService;

    /**
     * @Description: 服务申请
     * @Param: [serviceApplicationDTO]
     * @Return: cn.plou.web.common.config.common.Root
     * @Author: youbc
     * @Date: 2018/8/21 8上午30
     */
    @PostMapping("service-application")
    public Root serviceApplication(@Valid ServiceApplicationDTO serviceApplicationDTO, BindingResult bindingResult) {
        BindingResultHandler.handle(bindingResult);
        heatingServeService.serviceApplication(serviceApplicationDTO);
        return new Root();
    }

    /**
     * @Description: 服务缴费
     * @Param: [servicePaymentDTO]
     * @Return: cn.plou.web.common.config.common.Root
     * @Author: youbc
     * @Date: 2018/8/21 8上午32
     */
    @PostMapping("service-payment")
    public Root servicePayment(@Valid ServicePaymentDTO servicePaymentDTO, BindingResult bindingResult) {
        BindingResultHandler.handle(bindingResult);
        heatingServeService.servicePayment(servicePaymentDTO);
        return new Root();
    }

    /**
     * @Description: 服务反馈
     * @Param: [serviceFeedbackDTO]
     * @Return: cn.plou.web.common.config.common.Root
     * @Author: youbc
     * @Date: 2018/8/21 9上午23
     */
    @PostMapping("service-feedback")
    public Root serviceFeedback(@Valid ServiceFeedbackDTO serviceFeedbackDTO, BindingResult bindingResult) {
        BindingResultHandler.handle(bindingResult);
        heatingServeService.serviceFeedback(serviceFeedbackDTO);
        return new Root();
    }

    /**
     * @Description: 供热服务列表
     * @Param: [heatingServeSearchDTO]
     * @Return: cn.plou.web.common.config.common.Root
     * @Author: youbc
     * @Date: 2018/8/22 15下午58
     */
    @PostMapping("list")
    public Root list(HeatingServeSearchDTO heatingServeSearchDTO) {
        List<HeatingServeListVO> list = heatingServeService.list(heatingServeSearchDTO);
        Root root = new Root();
        root.setData(list);
        root.setCond(getCond(heatingServeSearchDTO.getPage(), heatingServeSearchDTO.getPageSize(), heatingServeService.listCount(heatingServeSearchDTO), heatingServeSearchDTO.getOrder(), heatingServeSearchDTO.getSortby()));
        return root;
    }

    /**
     * @Description: 供热服务用户列表
     * @Param: [heatingServeUserSearchDTO]
     * @Return: cn.plou.web.common.config.common.Root
     * @Author: youbc
     * @Date: 2018/8/22 15下午58
     */
    @PostMapping("user-list")
    public Root userList(HeatingServeUserSearchDTO heatingServeUserSearchDTO) {
        List<HeatingServeUserListVO> list = heatingServeService.userList(heatingServeUserSearchDTO);
        Root root = new Root();
        root.setData(list);
        root.setCond(getCond(heatingServeUserSearchDTO.getPage(), heatingServeUserSearchDTO.getPageSize(), heatingServeService.userListCount(heatingServeUserSearchDTO), heatingServeUserSearchDTO.getOrder(), heatingServeUserSearchDTO.getSortby()));
        return root;
    }

    /**
     * @Description: 供热服务弹框内容
     * @Param: [primaryId]
     * @Return: cn.plou.web.charge.heatingmanage.vo.HeatingServeVO
     * @Author: youbc
     * @Date: 2018/8/21 15下午55
     */
    @GetMapping("get")
    public HeatingServeVO get(@RequestParam String primaryId) {
        return heatingServeService.get(primaryId);
    }

    /**
     * @Description: 获取应收金额
     * @Param: [singleCost, nums, companyId, typeId]
     * @Return: java.math.BigDecimal
     * @Author: youbc
     * @Date: 2018/9/7 10上午57
     */
    @GetMapping("get-total-cost")
    public BigDecimal getTotalCost(@RequestParam BigDecimal singleCost, @RequestParam BigDecimal nums, @RequestParam String companyId, @RequestParam String typeId) {
        BigDecimal total = singleCost.multiply(nums);
        return MoneyConverter.Convert(companyId, total, typeId);
    }

    /**
     * @Description: 执行人、回访人下拉框
     * @Param: [companyId]
     * @Return: java.util.List<cn.plou.web.charge.heatingmanage.vo.HeatingServeDepartmentVO>
     * @Author: youbc
     * @Date: 2018/8/23 8上午40
     */
    @GetMapping("get-users")
    public List<HeatingServeDepartmentVO> getUsers(@RequestParam String companyId) {
        return heatingServeService.getUsers(companyId);
    }


    /**
     * @param companyId
     * @return 统计分析-任务查询-供热管理
     */
    @GetMapping("getTotal")
    public Object getTotal(@RequestParam String companyId) {


        return heatingServeService.getUsers(companyId);
    }


}
