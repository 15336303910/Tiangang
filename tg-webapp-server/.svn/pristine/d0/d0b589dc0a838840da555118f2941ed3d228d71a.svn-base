package cn.plou.web.common.utils;

import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.alibaba.fastjson.JSONObject;

/**
 * @Project : tg-services
 * @File : XMLUtils.java
 * @Author : WangJiWei
 * @Date : 2017年12月21日下午5:32:49
 *
 * @Comments : XML工具类 解析xml文件并转化为JavaBean对象 <br>
 * 
 */
public class XMLUtils {

    public static final SAXReader reader = new SAXReader();
    private static final Logger log = LoggerFactory.getLogger(XMLUtils.class);

    /**
     * 
     * @Author : WangJiwei
     * @Date : 2017年12月22日上午8:12:34
     * @Comments :
     * @param path
     * @return :读取xml返回Document
     *
     */
    public static Document read(String path) {
	try {
	    Document document = reader.read(new File(path));
	    return document;
	} catch (DocumentException e) {
	    log.error(e.getMessage());
	}
	return null;
    }

    /**
     * 
     * @Author : WangJiwei
     * @Date : 2017年12月22日上午8:13:29
     * @Comments :
     * @param DV
     * @return 转化为json
     *
     */
    @SuppressWarnings("unchecked")
    public static String readJSON(Element elet) {
	JSONObject j = new JSONObject();
	Iterator<Element> itt = elet.elementIterator();
	while (itt.hasNext()) {
	    Element e = itt.next();
	    j.put(e.getName(), e.getStringValue());
	}
	return j.toJSONString();
    }

    @SuppressWarnings("unchecked")
    public static Map<String, Object> readMap(Element elet) {
	Map<String, Object> j = new HashMap<>();
	Iterator<Element> itt = elet.elementIterator();
	while (itt.hasNext()) {
	    Element e = itt.next();
	    j.put(e.getName(), e.getStringValue());
	}
	return j;
    }

    /**
     * 
     * @Author : WangJiwei
     * @Date : 2017年12月22日上午8:13:53
     * @Comments :
     * @param path
     * @return 获取xml中Element的迭代
     *
     */
    @SuppressWarnings("unchecked")
    public static Iterator<Element> elementIterator(String path) {
	try {
	    Document document = read(path);
	    Element rootElement = document.getRootElement();
	    return rootElement.elementIterator();
	} catch (Exception e) {
	    log.error(e.getMessage());
	}
	return null;
    }

    /**
     * Element -> bean
     */
    public static <T> T toBean(Element e, Class<T> clzz) {
	return JBeanUtils.toBean(readJSON(e), clzz);
    }

}
