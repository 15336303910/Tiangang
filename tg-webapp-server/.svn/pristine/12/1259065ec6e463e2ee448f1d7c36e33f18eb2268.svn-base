package cn.plou.web.charge.chargeconfig.service.impl;

import cn.plou.web.charge.chargeconfig.dao.UserYearAccountDetailMapper;
import cn.plou.web.charge.chargeconfig.dto.BusinessAnalysisSearchDTO;
import cn.plou.web.charge.chargeconfig.dto.HeatingSummarySearchDTO;
import cn.plou.web.charge.chargeconfig.entity.UserYearAccountDetail;
import cn.plou.web.charge.chargeconfig.service.UserYearAccountDetailService;
import cn.plou.web.charge.chargeconfig.vo.AccountSummaryListVO;
import cn.plou.web.charge.chargeconfig.vo.BusinessAnalysisVO;
import cn.plou.web.system.commonMessage.typeMst.dao.TypeMstMapper;
import cn.plou.web.system.commonMessage.typeMst.entity.TypeMst;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;
import java.math.BigDecimal;
import java.util.List;

import static cn.plou.web.common.utils.a1.DateUtil.BANK_DEFAULT_DATE_FORMAT;
import static cn.plou.web.common.utils.a1.DateUtil.toDateTimeString;

/**
 * @author yinxiaochen
 * 2018/8/15 15:38
 */


@Service
@Transactional(rollbackFor = Exception.class)
public class UserYearAccountDetailServiceImpl implements UserYearAccountDetailService {

    @Autowired
    private TypeMstMapper typeMstMapper;

    @Resource
    private UserYearAccountDetailMapper userYearAccountDetailMapper;

    @Override
    public int deleteByPrimaryKey(String primaryId) {
        return userYearAccountDetailMapper.deleteByPrimaryKey(primaryId);
    }

    @Override
    public int insert(UserYearAccountDetail record) {
        return userYearAccountDetailMapper.insert(record);
    }

    @Override
    public int insertSelective(UserYearAccountDetail record) {
        return userYearAccountDetailMapper.insertSelective(record);
    }

    @Override
    public UserYearAccountDetail selectByPrimaryKey(String primaryId) {
        return userYearAccountDetailMapper.selectByPrimaryKey(primaryId);
    }


    @Override
    public int updateByPrimaryKeySelective(UserYearAccountDetail record) {
        return userYearAccountDetailMapper.updateByPrimaryKeySelective(record);
    }

    @Override
    public int updateByPrimaryKey(UserYearAccountDetail record) {
        return userYearAccountDetailMapper.updateByPrimaryKey(record);
    }


    @Override
    public BigDecimal getTotalByConsumerId(String consumerId, String annual) {
        return userYearAccountDetailMapper.getTotalByConsumerId(consumerId, annual);
    }


    @Override
    public PageInfo<UserYearAccountDetail> findByUserAndAnnual(String consumerId, String annual, String order, String sortby, Integer page, Integer pageSize) {
        PageHelper.startPage(page, pageSize);
        List<UserYearAccountDetail> userYearAccountDetailsByConsumerId = userYearAccountDetailMapper.findByUserAndAnnual(consumerId, annual, order, sortby, page, pageSize);
        PageInfo<UserYearAccountDetail> pageInfo = new PageInfo<>(userYearAccountDetailsByConsumerId);
        return pageInfo;

    }

    @Override
    public List<UserYearAccountDetail> findByThirdConsumerId(String thirdConsumerId) {
        return userYearAccountDetailMapper.findByThirdConsumerId(thirdConsumerId);
    }

    /**
     * @Description: 统计分析-营业分析
     * @Param: [businessAnalysisSearchDTO]
     * @Return: java.util.List<cn.plou.web.charge.chargeconfig.vo.BusinessAnalysisVO>
     * @Author: youbc
     * @Date: 2018/10/10 9上午10
     */
    @Override
    public List<BusinessAnalysisVO> businessAnalysis(BusinessAnalysisSearchDTO businessAnalysisSearchDTO) {
        List<BusinessAnalysisVO> list = userYearAccountDetailMapper.businessAnalysis(businessAnalysisSearchDTO);
        List<TypeMst> pay_channel = typeMstMapper.selectDownInfoByTypeKbn("pay_channel");
        int numAll = 0;
        BigDecimal accountCostAll = BigDecimal.ZERO;
        for (BusinessAnalysisVO vo : list) {
            if (vo.getNumTotal() == null) {
                vo.setNumTotal(0);
            }
            numAll = numAll + vo.getNumTotal();
            if (vo.getAccountCostTotal() == null) {
                vo.setAccountCostTotal(BigDecimal.ZERO);
            }
            accountCostAll = accountCostAll.add(vo.getAccountCostTotal());
            for (TypeMst typeMst : pay_channel) {
                if (StringUtils.equalsIgnoreCase(typeMst.getId(), vo.getAccountChannel())) {
                    vo.setAccountChannelName(typeMst.getTypeName());
                    break;
                }
            }

            String dateStartStr = toDateTimeString(businessAnalysisSearchDTO.getDateStart(), BANK_DEFAULT_DATE_FORMAT);
            String dateEndStr = toDateTimeString(businessAnalysisSearchDTO.getDateEnd(), BANK_DEFAULT_DATE_FORMAT);
            if (StringUtils.equalsIgnoreCase(dateStartStr, dateEndStr)) {
                vo.setDateRange(dateStartStr);
            } else {
                vo.setDateRange(dateStartStr + "-" + dateEndStr);
            }
        }

        for (BusinessAnalysisVO vo : list) {
            vo.setAccountCostPercent(vo.getAccountCostTotal().multiply(new BigDecimal(100)).divide(accountCostAll, 2, BigDecimal.ROUND_HALF_UP));
            vo.setNumPercent(new BigDecimal(vo.getNumTotal()).multiply(new BigDecimal(100)).divide(new BigDecimal(numAll), 2, BigDecimal.ROUND_HALF_UP));
        }
        return list;
    }

    /**
     * @Description: 统计分析-供热汇总
     * @Param: [heatingSummarySearchDTO]
     * @Return: java.util.List<cn.plou.web.charge.chargeconfig.vo.BusinessAnalysisVO>
     * @Author: youbc
     * @Date: 2018/10/10 11上午10
     */
    @Override
    public List<BusinessAnalysisVO> heatingSummary(HeatingSummarySearchDTO heatingSummarySearchDTO) {
        /*
         SELECT
            heating_status,
            SUBSTR(consumer_id, 1, 10) AS unit,
            annual,
            '统计对象xxx楼',
            '总面积',
            '总户数',
            sum(heating_area) AS heatingAreaTotal,
            count(*) AS numTotal
        FROM
            user_year_heat
        WHERE
            annual = '2018'
        AND company_id = '00248'
        GROUP BY
            heating_status,unit;
         */
        return null;
    }



    @Override
    public PageInfo<AccountSummaryListVO> getAccountSummaryListByConsumer(String companyId,
                                                                      String stationId,
                                                                      String commuityId,
                                                                      String buildingNo,
                                                                      String unitId,
                                                                      String consumerId,
                                                                      String annual,
                                                                      String order,
                                                                      String sortby,
                                                                      Integer page,
                                                                      Integer pageSize){
        PageHelper.startPage(page,pageSize);
        List<AccountSummaryListVO> accountSummaryByConsumer = userYearAccountDetailMapper.getAccountSummaryListByConsumer(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual,
                order,
                sortby,
                page,
                pageSize);
        PageInfo<AccountSummaryListVO> pageInfo=new PageInfo<>(accountSummaryByConsumer);
        return pageInfo;

    }


    @Override
    public PageInfo<AccountSummaryListVO> getAccountSummaryListByCommuity(String companyId,
                                                                      String stationId,
                                                                      String commuityId,
                                                                      String buildingNo,
                                                                      String unitId,
                                                                      String consumerId,
                                                                      String annual,
                                                                      String order,
                                                                      String sortby,
                                                                      Integer page,
                                                                      Integer pageSize){
        PageHelper.startPage(page,pageSize);
        List<AccountSummaryListVO> accountSummaryByCommuity = userYearAccountDetailMapper.getAccountSummaryListByCommuity(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual,
                order,
                sortby,
                page,
                pageSize);
        PageInfo<AccountSummaryListVO> pageInfo=new PageInfo<>(accountSummaryByCommuity);
        return pageInfo;

    }


    @Override
    public PageInfo<AccountSummaryListVO> getAccountSummaryListByStation(String companyId,
                                                                     String stationId,
                                                                     String commuityId,
                                                                     String buildingNo,
                                                                     String unitId,
                                                                     String consumerId,
                                                                     String annual,
                                                                     String order,
                                                                     String sortby,
                                                                     Integer page,
                                                                     Integer pageSize){
        PageHelper.startPage(page,pageSize);
        List<AccountSummaryListVO> accountSummaryByStation = userYearAccountDetailMapper.getAccountSummaryListByStation(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual,
                order,
                sortby,
                page,
                pageSize);
        PageInfo<AccountSummaryListVO> pageInfo=new PageInfo<>(accountSummaryByStation);
        return pageInfo;

    }

    @Override
    public PageInfo<AccountSummaryListVO> getAccountSummaryListByCompany(String companyId,
                                                                     String stationId,
                                                                     String commuityId,
                                                                     String buildingNo,
                                                                     String unitId,
                                                                     String consumerId,
                                                                     String annual,
                                                                     String order,
                                                                     String sortby,
                                                                     Integer page,
                                                                     Integer pageSize){
        PageHelper.startPage(page,pageSize);
        List<AccountSummaryListVO> accountSummaryByCompany = userYearAccountDetailMapper.getAccountSummaryListByCompany(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual,
                order,
                sortby,
                page,
                pageSize);
        PageInfo<AccountSummaryListVO> pageInfo=new PageInfo<>(accountSummaryByCompany);
        return pageInfo;

    }


    @Override
    public AccountSummaryListVO getAccountSummaryDataByConsumer(String companyId,
                                                                String stationId,
                                                                String commuityId,
                                                                String buildingNo,
                                                                String unitId,
                                                                String consumerId,
                                                                String annual){

        AccountSummaryListVO accountSummaryByConsumer = userYearAccountDetailMapper.getAccountSummaryDataByConsumer(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual);
        return accountSummaryByConsumer;

    }


    @Override
    public AccountSummaryListVO getAccountSummaryDataByCommuity(String companyId,
                                                                String stationId,
                                                                String commuityId,
                                                                String buildingNo,
                                                                String unitId,
                                                                String consumerId,
                                                                String annual){

        AccountSummaryListVO accountSummaryByCommuity = userYearAccountDetailMapper.getAccountSummaryDataByCommuity(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual);
        return accountSummaryByCommuity;

    }


    @Override
    public AccountSummaryListVO getAccountSummaryDataByStation(String companyId,
                                                               String stationId,
                                                               String commuityId,
                                                               String buildingNo,
                                                               String unitId,
                                                               String consumerId,
                                                               String annual){

        AccountSummaryListVO accountSummaryByStation = userYearAccountDetailMapper.getAccountSummaryDataByStation(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual);
        return accountSummaryByStation;

    }

    @Override
    public AccountSummaryListVO getAccountSummaryDataByCompany(String companyId,
                                                               String stationId,
                                                               String commuityId,
                                                               String buildingNo,
                                                               String unitId,
                                                               String consumerId,
                                                               String annual){

        AccountSummaryListVO accountSummaryByCompany = userYearAccountDetailMapper.getAccountSummaryDataByCompany(companyId,
                stationId,
                commuityId,
                buildingNo,
                unitId,
                consumerId,
                annual);
        return accountSummaryByCompany;

    }



}
