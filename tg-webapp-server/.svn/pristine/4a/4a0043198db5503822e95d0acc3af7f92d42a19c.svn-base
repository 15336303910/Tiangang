package cn.plou.web.balance.regulateAnalysis.controller;

import cn.plou.web.balance.dataAnalysis.service.BalanceValveDataService;
import cn.plou.web.balance.dataAnalysis.vo.BalanceValveDataInfo;
import cn.plou.web.balance.dataAnalysis.vo.BalanceValveDataSelectInfo;
import cn.plou.web.common.config.common.Root;
import cn.plou.web.system.permission.userPageHistory.entity.UserPageHistory;
import cn.plou.web.system.permission.userPageHistory.service.UserPageHistoryService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

import javax.servlet.ServletRequest;
import java.util.ArrayList;
import java.util.List;

@RestController
@EnableSwagger2
//@RequestMapping("${balancePath}/regulate")
@RequestMapping("balance/regulateAnalysis")
@Api(description = "控制分析")
public class RegulateAnalysisController {
    @Autowired
    BalanceValveDataService balanceValveDataService;
    @Autowired
    UserPageHistoryService userPageHistoryService;
    @ApiOperation(value = "根据控制模式获取平衡阀历史数据")
    @PostMapping("/getHistoryDataListByControlMode")
    //@RequiresPermissions("")
    public Root getBalanceDataListByControlMode(@RequestBody BalanceValveDataSelectInfo balanceValveDataSelectInfo){
        UserPageHistory userPageHistory = new UserPageHistory();
        userPageHistory.setCol("balance-regulateAnalysis");
        userPageHistory.setAct("getBalanceDataListByControlMode");
        userPageHistoryService.addUserPageHistory(userPageHistory);
        Root root = new Root();
        root.setData(balanceValveDataService.getBalanceDataList(balanceValveDataSelectInfo.getStartDate(),balanceValveDataSelectInfo.getEndDate(),balanceValveDataSelectInfo.getCompanyId(),
                balanceValveDataSelectInfo.getStationId(),balanceValveDataSelectInfo.getCommuityId(),balanceValveDataSelectInfo.getBuildingNo(),
                balanceValveDataSelectInfo.getSortby(),balanceValveDataSelectInfo.getOrder(),balanceValveDataSelectInfo.getPage(),balanceValveDataSelectInfo.getPageSize(),
                balanceValveDataSelectInfo.getControlMode()));
        return root;
    }

    @ApiOperation(value = "批量导出平衡阀压差控制数据")
    @PostMapping("/exportExcelPressureData")
    public Root exportExcelPressureData(@RequestBody BalanceValveDataSelectInfo balanceValveDataSelectInfo, ServletRequest request) {
        UserPageHistory userPageHistory = new UserPageHistory();
        userPageHistory.setCol("balance-regulateAnalysis");
        userPageHistory.setAct("exportExcelPressureData");
        userPageHistoryService.addUserPageHistory(userPageHistory);
        Root root=new Root();
        root.setData(balanceValveDataService.
                exportExcelPressureData(balanceValveDataSelectInfo.getStartDate(),balanceValveDataSelectInfo.getEndDate(),balanceValveDataSelectInfo.getCompanyId()
                        ,balanceValveDataSelectInfo.getStationId(),balanceValveDataSelectInfo.getCommuityId(),balanceValveDataSelectInfo.getBuildingNo(),balanceValveDataSelectInfo.getControlMode(),request));
        return root;
    }

    @ApiOperation(value = "批量导出平衡阀温度控制数据")
    @PostMapping("/exportExcelTemperatureData")
    public Root exportExcelTemperatureData(@RequestBody BalanceValveDataSelectInfo balanceValveDataSelectInfo, ServletRequest request) {
        UserPageHistory userPageHistory = new UserPageHistory();
        userPageHistory.setCol("balance-regulateAnalysis");
        userPageHistory.setAct("exportExcelTemperatureData");
        userPageHistoryService.addUserPageHistory(userPageHistory);
        Root root=new Root();
        root.setData(balanceValveDataService.
                exportExcelTemperatureData(balanceValveDataSelectInfo.getStartDate(),balanceValveDataSelectInfo.getEndDate(),balanceValveDataSelectInfo.getCompanyId()
                        ,balanceValveDataSelectInfo.getStationId(),balanceValveDataSelectInfo.getCommuityId(),balanceValveDataSelectInfo.getBuildingNo(),balanceValveDataSelectInfo.getControlMode(),request));
        return root;
    }

    @ApiOperation(value = "批量导出平衡阀流量控制数据")
    @PostMapping("/exportExcelFlowData")
    public Root exportExcelFlowData(@RequestBody BalanceValveDataSelectInfo balanceValveDataSelectInfo, ServletRequest request) {
        UserPageHistory userPageHistory = new UserPageHistory();
        userPageHistory.setCol("balance-regulateAnalysis");
        userPageHistory.setAct("exportExcelFlowDat");
        userPageHistoryService.addUserPageHistory(userPageHistory);
        Root root=new Root();
        root.setData(balanceValveDataService.
                exportExcelFlowData(balanceValveDataSelectInfo.getStartDate(),balanceValveDataSelectInfo.getEndDate(),balanceValveDataSelectInfo.getCompanyId()
                        ,balanceValveDataSelectInfo.getStationId(),balanceValveDataSelectInfo.getCommuityId(),balanceValveDataSelectInfo.getBuildingNo(),balanceValveDataSelectInfo.getControlMode(),request));
        return root;
    }

}
