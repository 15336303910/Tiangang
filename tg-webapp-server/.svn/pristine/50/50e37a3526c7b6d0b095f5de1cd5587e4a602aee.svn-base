package cn.plou.web.common.task;

import cn.plou.web.charge.chargeconfig.controller.CostGatherController;
import io.swagger.annotations.Api;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import javax.annotation.Resource;
import java.text.SimpleDateFormat;
import java.util.Date;

@Component
@Api(description = "滞纳金任务调度")
public class LateFeeJob {
    @Resource
    CostGatherController costGatherController;
    //@Scheduled(fixedRate = 1000)
    //"0 2 1 * * ?" 每天凌晨1点2分触发 ，这里可以考虑设置每年10月——次年4月触发，以降低服务器发压力
    @Scheduled(cron = "0 2 1 * * ?")
    public void run(){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm:ss");
        String ymd = sdf.format(new Date());
        System.out.println("当前时间为:"+ymd);

        //我要根据当前时间，去判断采暖季（2018年10月——2019年5月，都应该算作2018年）
        costGatherController.calcLateFee("2018");
        //滞纳金计算公式：
        //每个用户对应的热费单价类型，然后找到“热费单价类型表”price_define，然后用“用户年度采暖费用明细表”user_year_receivable_detail中，费用项目charging_item中的“金额”
        // （金额指的是除了面积费用、热量费用、滞纳金剩下的那些）,去在“热费单价类型表”price_define中滞纳金缴纳时间段内，乘以“热费单价类型表”price_define中的滞纳金率。每天计算一个滞纳金。
        //比如说，金额为100，滞纳金率为5%，那么每天会产生5元钱的滞纳金，每天五元钱。
        //所以这个要扫描所有的用户表，计算所有的情况，会比较消耗系统资源。

        //System.out.println("当前时间为:111");
    }
}
