package cn.plou.web.charge.chargeconfig.util;

import cn.plou.web.charge.chargeconfig.dto.BankChargeExcelDTO;
import cn.plou.web.charge.chargeconfig.dto.BankChargeListDTO;
import cn.plou.web.common.config.common.BusinessException;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 * @ClassName: ExcelReaderUtil
 * @Description: 解析银行对账 Excel
 * @Author: youbc
 * @Date 2018-09-11 13:51
 */
public class ExcelReaderUtil {

    /**
     * @Description: 根据 fileType 不同读取 excel 文件
     * @Param: [path]
     * @Return: cn.plou.web.charge.chargeconfig.dto.BankChargeExcelDTO
     * @Author: youbc
     * @Date: 2018/9/11 15下午46
     */
    public static BankChargeExcelDTO ReadExcel(String path) {
        //读取excel文件
        InputStream is = null;
        try {
            is = new FileInputStream(path);
            // 获取工作薄
            Workbook wb;
            if ("xls".equals(path.substring(path.lastIndexOf(".") + 1))) {
                wb = new HSSFWorkbook(is);
            } else if ("xlsx".equals(path.substring(path.lastIndexOf(".") + 1))) {
                wb = new XSSFWorkbook(is);
            } else {
                throw new BusinessException("请上传 .xls 或 .xlsx 格式文件");
            }

            BankChargeExcelDTO dto = new BankChargeExcelDTO();

            // 读取第一个工作页sheet
            Sheet sheet = wb.getSheetAt(0);
            Row row2 = sheet.getRow(1); // 第二行
            // 获取最大列数
            int colnum2 = row2.getPhysicalNumberOfCells();
            for (int j = 0; j < colnum2; j++) {
                Cell cell = row2.getCell(j);
                if (cell != null) {
                    cell.setCellType(Cell.CELL_TYPE_STRING);
                    String value = cell.getStringCellValue();
                    if (j == 0) {
                        dto.setTransactionTotal(Integer.valueOf(value));
                    } else if (j == 1) {
                        dto.setTransactionMoney(new BigDecimal(value));
                    } else if (j == 2) {
                        dto.setTransactionDate(new SimpleDateFormat("yyyyMMdd").parse(value));
                    }
                }
            }

            Row row3 = sheet.getRow(2); // 第三行
            // 获取最大列数
            int colnum3 = row3.getPhysicalNumberOfCells();
            // 获取最大行数
            int rownum = sheet.getPhysicalNumberOfRows();
            List<BankChargeListDTO> list = new ArrayList<>();
            Row row;
            for (int i = 3; i < rownum; i++) {
                row = sheet.getRow(i);
                if (row != null) {
                    BankChargeListDTO listDTO = new BankChargeListDTO();
                    for (int j = 1; j < colnum3; j++) {
                        Cell cell = row.getCell(j);
                        if (cell != null) {
                            String cellValue = "";
                            if (j != 3) {
                                cell.setCellType(Cell.CELL_TYPE_STRING);
                                cellValue = cell.getStringCellValue();
                            } else {
                                cell.setCellType(Cell.CELL_TYPE_FORMULA);
                            }
                            if (j == 1) {
                                listDTO.setConsumerId(cellValue);
                            } else if (j == 2) {
                                listDTO.setThirdPartyFlowCode(cellValue);
                            } else if (j == 3) {
                                listDTO.setPayDate(cell.getDateCellValue());
                            } else if (j == 4) {
                                listDTO.setPayMoney(new BigDecimal(cellValue));
                            } else if (j == 5) {
                                listDTO.setOperatorCode(cellValue);
                            } else if (j == 6) {
                                listDTO.setOperatorArea(cellValue);
                            } else if (j == 7) {
                                listDTO.setPayMode(cellValue);
                            } else if (j == 8) {
                                listDTO.setPushTel(cellValue);
                            } else if (j == 9) {
                                listDTO.setPushMail(cellValue);
                            }
                        }
                    }
                    list.add(listDTO);
                }
            }
            dto.setList(list);
            return dto;
        } catch (IOException | ParseException e) {
            e.printStackTrace();
        } finally {
            try {
                if (is != null) is.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return null;
    }


    public static void main(String[] args) {
//        String path = "C:\\Users\\Administrator\\Desktop\\a.xls";
//        String path = "C:\\Users\\Administrator\\Desktop\\01.xlsx";
        String path = "C:\\Users\\Administrator\\Desktop\\b.txt";
        ReadExcel(path);
    }


}
