<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.plou.web.heatManage.monitor.dao.RunningDataTotalDao">

	<select id="get"
		resultType="cn.plou.web.heatManage.monitor.domain.RunningDataTotalDO">
		select
		`consumer_id`,`heat`,`power`,`flow_speed`,`flow_upper_limit`,`in_temperature`,`out_temperature`,`room_temperature_read`,`room_temperature_set`,`outdoor_temperature`,`openness`,`open_status`,`heating_area`,`heating_index`,`flowing_index`,`heat_status`,`control_role`,`regulation_mode`,`action_limit`,`system_read_time`,`company_id`,`address`,`notes`,`memo1`,`memo2`,`memo3`,`memo4`,`memo5`,`memo6`,`create_date`,`create_user`,`update_date`,`update_user`
		from user_running_data_total where consumer_id = #{value}
	</select>

	<select id="getBuildingVO"
		resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select count(*) houseCnts,
		sum(power) power,sum(flow_speed)
		flow,avg(in_temperature)
		inWaterTmp,avg(out_temperature) outWaterTmp
		from
		user_running_data_total
		<where>
			<if test="consumerId != null and consumerId != ''"> and substr(consumer_id,1,13) = #{consumerId} </if>
			and system_read_time between #{beginTime} and #{endTime}
		</where>
	</select>

	<select id="list"
		resultType="cn.plou.web.heatManage.monitor.domain.RunningDataTotalDO">
        select
		m.consumer_id,a.heat,a.power,a.flow_speed,b.flow_upper_limit,a.in_temperature,a.out_temperature,a.room_temperature_read,a.room_temperature_set,a.outdoor_temperature,a.openness,a.open_status,a.heating_area,a.heating_index,a.flowing_index,a.heat_status,a.control_role,a.regulation_mode,a.action_limit,a.system_read_time,a.company_id,m.address,a.flow,a.adj_heating_index
		from houses_info as m 
		left JOIN user_running_data_total as a on m.consumer_id = a.consumer_id and a.system_read_time between #{beginTime} and #{endTime}
		left JOIN (select sum(flow_upper_value) as flow_upper_limit,consumer_id from valve_data_now 
		<where>
			<if test="consumerId != null and consumerId != ''"> and substr(consumer_id,1,15) = #{consumerId} </if>
		</where>
		group by consumer_id) b on m.consumer_id = b.consumer_id
		<where>
			<if test="consumerId != null and consumerId != ''"> and substr(m.consumer_id,1,15) = #{consumerId} </if>
		</where>
		order by substr(m.consumer_id,16,4) + 0 desc
	</select>

	<select id="houseList"
		resultType="cn.plou.web.heatManage.monitor.domain.RunningDataTotalDO">
		select
		m.consumer_id
		, a.heat
		,a.power,a.flow_speed,a.flow_upper_limit,a.in_temperature,a.out_temperature
		,FORMAT(a.out_temperature-a.in_temperature,2) as temperature_diff
		,a.room_temperature_read,a.room_temperature_set,a.outdoor_temperature,a.openness
		,a.open_status
		,t1.type_name as open_status_name
		,a.heating_area,a.heating_index,a.flowing_index
		,a.heat_status
		,t2.type_name as heat_status_name
		,a.control_role,a.regulation_mode
		,a.action_limit
		,a.system_read_time as system_read_time
		,DATE_FORMAT(a.system_read_time,'%Y-%m-%d %H:%i:%s') as system_read_time_str
		,a.company_id,m.address,a.flow,a.adj_heating_index,'1' as customerServiceFlg
		from houses_info as m 
		inner join user_running_data_total as a on m.consumer_id = a.consumer_id
		left join type_mst t1 on t1.id=a.open_status
		left join type_mst t2 on t2.id=a.heat_status
		<where>

			<if test="companyIds!=null">
					<if test="companyIds.size()>0">
						and m.company_id in
						<foreach collection="companyIds" item="item" index="index"
							open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
			</if>
			<if test="commuityIds!=null">
					<if test="commuityIds.size()>0">
						and substring(m.consumer_id,1,10) in
						<foreach collection="commuityIds" item="item" index="index"
							open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
			</if>
			<choose>			
				<when test="type=='build'">
					<if test="consumerId != null and consumerId != ''"> and substr(m.consumer_id,1,13) = #{consumerId} </if>
				</when>
				<when test="type=='unit'">
					<if test="consumerId != null and consumerId != ''"> and substr(m.consumer_id,1,15) = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>

			<if test="power != null and power != ''"> and a.power between substring_index(#{power},',',1) and
				substring_index(#{power},',',-1)
			</if>
			<if test="flowSpeed != null and flowSpeed != ''"> and a.flow_speed between
				substring_index(#{flowSpeed},',',1) and
				substring_index(#{flowSpeed},',',-1)
			</if>
			<if test="inWaterTmp != null and inWaterTmp != ''"> and a.in_temperature between
				substring_index(#{inWaterTmp},',',1) and
				substring_index(#{inWaterTmp},',',-1)
			</if>
			<if test="outWaterTmp != null and outWaterTmp != ''"> and a.out_temperature between
				substring_index(#{outWaterTmp},',',1) and
				substring_index(#{outWaterTmp},',',-1)
			</if>
			<if test="houseTmp != null and houseTmp != ''"> and a.room_temperature_read between
				substring_index(#{houseTmp},',',1) and
				substring_index(#{houseTmp},',',-1)
			</if>
			<if test="tmpDiff != null and tmpDiff != ''"> and (a.in_temperature-a.out_temperature) between
				substring_index(#{tmpDiff},',',1) and
				substring_index(#{tmpDiff},',',-1)
			</if>
			<if test="flow != null and flow != ''"> and a.flow between
				substring_index(#{flow},',',1) and
				substring_index(#{flow},',',-1)
			</if>
			<if test="heat != null and heat != ''"> and a.heat between
				substring_index(#{heat},',',1) and
				substring_index(#{heat},',',-1)
			</if>
			<if test="heatingIndex != null and heatingIndex != ''"> and a.heating_index between
				substring_index(#{heatingIndex},',',1) and
				substring_index(#{heatingIndex},',',-1)
			</if>
			<if test="flowingIndex != null and flowingIndex != ''"> and a.flowing_index between
				substring_index(#{flowingIndex},',',1) and
				substring_index(#{flowingIndex},',',-1)
			</if>
		
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by a.${sort} ${order}
			</when>
			<otherwise>
				order by m.consumer_id + 0
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="statisticsData"
		resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select
		count(distinct substr(b.consumer_id,1,15))
		unitCnts,count(b.consumer_id) houseCnts,
		sum(b.heating_area)		totalArea,
		sum(case when b.heating_status = 'heating_status_1' then b.heating_area else 0 end) totalHeatArea,
		avg(u.power)
		power,avg(u.flow_speed) flow,avg(u.in_temperature)
		inWaterTmp,avg(u.out_temperature) outWaterTmp,
		avg(u.room_temperature_read) houseTmp,avg(u.outdoor_temperature)
		outsideTmp,avg(u.heating_index) heatIndex,avg(u.flowing_index)
		flowIndex,avg(u.adj_heating_index) adjHeatingIndex
		from houses_info b left join 
		user_running_data_total u on b.consumer_id = u.consumer_id 
		<where>
	
			<choose>
				<when test="type=='company'">
					<if test="consumerId != null and consumerId != ''"> and b.company_id = #{consumerId} and u.system_read_time >date_add((
						select max(system_read_time) 
						from
						user_running_data_total where company_id = #{consumerId}
						), interval -24 hour) 
						</if>
				</when>
				<when test="type=='station'">
					<if test="consumerId != null and consumerId != ''">
						and substr(b.consumer_id,1,10) in (
						select commuity_id
						from
						commuity_info where station_id = #{consumerId}
						) and u.system_read_time > date_add((
						select max(u.system_read_time) 
						from
						user_running_data_total u
						inner join station_info s on u.company_id=s.company_id
						where s.station_id = #{consumerId}
						), interval -24 hour) 
					</if>
				</when>
				<when test="type=='commuity'">
					<if test="consumerId != null and consumerId != ''"> and substr(b.consumer_id,1,10) = #{consumerId} and u.system_read_time > date_add((
						select max(system_read_time) 
						from
						user_running_data_total where substr(consumer_id,1,10) = #{consumerId} 
						), interval -24 hour) 
						</if>
				</when>
				<when test="type=='build'">
					<if test="consumerId != null and consumerId != ''"> and substr(b.consumer_id,1,13) = #{consumerId} and u.system_read_time > date_add((
						select max(system_read_time) 
						from
						user_running_data_total where substr(consumer_id,1,13) = #{consumerId}
						), interval -24 hour) 
						</if>
				</when>
				<when test="type=='unit'">
					<if test="consumerId != null and consumerId != ''"> and substr(b.consumer_id,1,15) = #{consumerId} and u.system_read_time > date_add((
						select max(system_read_time) 
						from
						user_running_data_total where substr(consumer_id,1,15) = #{consumerId}
						), interval -24 hour) 
						</if>
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
	</select>

	<select id="listByBuilding"
		resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select substr(consumer_id,1,10) communityId,substr(consumer_id,1,13)
		buildingId,
		avg(power) power,avg(flow_speed) flow,avg(in_temperature)
		inWaterTmp,avg(out_temperature) outWaterTmp
		from
		user_running_data_total
		<where>
			and system_read_time between #{beginTime} and #{endTime}
			<choose>
				<when test="type=='company'">
					<if test="consumerId != null and consumerId != ''"> and company_id = #{consumerId} </if>
				</when>
				<when test="type=='station'">
					<if test="consumerId != null and consumerId != ''">
						and substr(consumer_id,1,10) in (
						select commuity_id
						from
						commuity_info where station_id = #{consumerId}
						)
					</if>
				</when>
				<when test="type=='commuity'">
					<if test="consumerId != null and consumerId != ''"> and substr(consumer_id,1,10) = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
		group by 1,2
	</select>

	<select id="buildingDataVo"
		resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select
		avg(power) power,avg(flow_speed) flow,avg(in_temperature)
		inWaterTmp,avg(out_temperature) outWaterTmp
		from
		user_running_data_total
		<where>
			and system_read_time between #{beginTime} and #{endTime}
			and substr(consumer_id,1,13) = #{consumerId}
			and flow_speed >0.02 
		</where>
	</select>

	<select id="getAllCommunity"
		resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select commuity_id communityId,commuity_name communityName
		from
		commuity_info
		<where>
			<choose>
				<when test="type=='company'">
					<if test="consumerId != null and consumerId != ''"> and company_id = #{consumerId} </if>
				</when>
				<when test="type=='station'">
					<if test="consumerId != null and consumerId != ''"> and station_id = #{consumerId}  </if>
				</when>
				<when test="type=='commuity'">
					<if test="consumerId != null and consumerId != ''"> and commuity_id = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>
		<if test="companyIds!=null">
	      <if test="companyIds.size()>0">
	        and company_id in
	        <foreach collection="companyIds" item="item" index="index" open="(" separator="," close=")">
	          #{item}
	        </foreach>
	      </if>
	    </if>
	    <if test="commuityIds!=null">
	      <if test="commuityIds.size()>0">
	        and commuity_id in
	        <foreach collection="commuityIds" item="item" index="index" open="(" separator="," close=")">
	          #{item}
	        </foreach>
	      </if>
	    </if>
		</where>
	</select>

	<select id="getAllBuilding" resultType="cn.plou.web.heatManage.monitor.vo.BuildingRunningDataTotalVO">
		select building_no buildingId,building_name 
		from
		build_info
		<where>
			and substr(building_no,1,10) = #{consumerId}
		</where>
	</select>

	<select id="getCommunityCount" resultType="int">
		select count(*)
		from
		commuity_info
		<where>
			<choose>
				<when test="type=='company'">
					<if test="consumerId != null and consumerId != ''"> and company_id = #{consumerId} </if>
				</when>
				<when test="type=='station'">
					<if test="consumerId != null and consumerId != ''"> and station_id = #{consumerId}  </if>
				</when>
				<when test="type=='commuity'">
					<if test="consumerId != null and consumerId != ''"> and commuity_id = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
	</select>

	<select id="getBuildingCount" resultType="int">
		select count(*)
		from
		build_info
		<where>
			<choose>
				<when test="type=='company'">
					<if test="consumerId != null and consumerId != ''"> and company_id = #{consumerId} </if>
				</when>
				<when test="type=='station'">
					<if test="consumerId != null and consumerId != ''">
						and substr(building_no,1,10) in (
						select commuity_id
						from
						commuity_info where station_id = #{consumerId}
						)
					</if>
				</when>
				<when test="type=='commuity'">
					<if test="consumerId != null and consumerId != ''"> and substr(building_no,1,10) = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
	</select>

	<select id="count" resultType="int">
		select count(*) from user_running_data_total
		<where>
			<if test="consumerId != null and consumerId != ''"> and consumer_id = #{consumerId} </if>
			<if test="heat != null and heat != ''"> and heat = #{heat} </if>
			<if test="power != null and power != ''"> and power = #{power} </if>
			<if test="flowSpeed != null and flowSpeed != ''"> and flow_speed = #{flowSpeed} </if>
			<if test="flowUpperLimit != null and flowUpperLimit != ''"> and flow_upper_limit = #{flowUpperLimit} </if>
			<if test="inTemperature != null and inTemperature != ''"> and in_temperature = #{inTemperature} </if>
			<if test="outTemperature != null and outTemperature != ''"> and out_temperature = #{outTemperature} </if>
			<if test="roomTemperatureRead != null and roomTemperatureRead != ''"> and room_temperature_read = #{roomTemperatureRead} </if>
			<if test="roomTemperatureSet != null and roomTemperatureSet != ''"> and room_temperature_set = #{roomTemperatureSet} </if>
			<if test="outdoorTemperature != null and outdoorTemperature != ''"> and outdoor_temperature = #{outdoorTemperature} </if>
			<if test="openness != null and openness != ''"> and openness = #{openness} </if>
			<if test="openStatus != null and openStatus != ''"> and open_status = #{openStatus} </if>
			<if test="heatingArea != null and heatingArea != ''"> and heating_area = #{heatingArea} </if>
			<if test="heatingIndex != null and heatingIndex != ''"> and heating_index = #{heatingIndex} </if>
			<if test="flowingIndex != null and flowingIndex != ''"> and flowing_index = #{flowingIndex} </if>
			<if test="heatStatus != null and heatStatus != ''"> and heat_status = #{heatStatus} </if>
			<if test="controlRole != null and controlRole != ''"> and control_role = #{controlRole} </if>
			<if test="regulationMode != null and regulationMode != ''"> and regulation_mode = #{regulationMode} </if>
			<if test="actionLimit != null and actionLimit != ''"> and action_limit = #{actionLimit} </if>
			<if test="systemReadTime != null and systemReadTime != ''"> and system_read_time = #{systemReadTime} </if>
			<if test="companyId != null and companyId != ''"> and company_id = #{companyId} </if>
			<if test="address != null and address != ''"> and address = #{address} </if>
			<if test="notes != null and notes != ''"> and notes = #{notes} </if>
			<if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
			<if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
			<if test="updateDate != null and updateDate != ''"> and update_date = #{updateDate} </if>
			<if test="updateUser != null and updateUser != ''"> and update_user = #{updateUser} </if>
		</where>
	</select>

	<select id="houseListCount" resultType="int">
		select count(*)
		from houses_info as m 
		inner JOIN user_running_data_total as a on m.consumer_id = a.consumer_id
		left join type_mst t1 on t1.id=a.open_status
		left join type_mst t2 on t2.id=a.heat_status
		<where>

			<if test="companyIds!=null">
					<if test="companyIds.size()>0">
						and m.company_id in
						<foreach collection="companyIds" item="item" index="index"
							open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
			</if>
			<if test="commuityIds!=null">
					<if test="commuityIds.size()>0">
						and substring(m.consumer_id,1,10) in
						<foreach collection="commuityIds" item="item" index="index"
							open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
			</if>
			<choose>			
				<when test="type=='build'">
					<if test="consumerId != null and consumerId != ''"> and substr(m.consumer_id,1,13) = #{consumerId} </if>
				</when>
				<when test="type=='unit'">
					<if test="consumerId != null and consumerId != ''"> and substr(m.consumer_id,1,15) = #{consumerId} </if>
				</when>
				<otherwise>
				</otherwise>
			</choose>

			<if test="power != null and power != ''"> and a.power between substring_index(#{power},',',1) and
				substring_index(#{power},',',-1)
			</if>
			<if test="flowSpeed != null and flowSpeed != ''"> and a.flow_speed between
				substring_index(#{flowSpeed},',',1) and
				substring_index(#{flowSpeed},',',-1)
			</if>
			<if test="inWaterTmp != null and inWaterTmp != ''"> and a.in_temperature between
				substring_index(#{inWaterTmp},',',1) and
				substring_index(#{inWaterTmp},',',-1)
			</if>
			<if test="outWaterTmp != null and outWaterTmp != ''"> and a.out_temperature between
				substring_index(#{outWaterTmp},',',1) and
				substring_index(#{outWaterTmp},',',-1)
			</if>
			<if test="houseTmp != null and houseTmp != ''"> and a.room_temperature_read between
				substring_index(#{houseTmp},',',1) and
				substring_index(#{houseTmp},',',-1)
			</if>
			<if test="tmpDiff != null and tmpDiff != ''"> and (a.in_temperature-a.out_temperature) between
				substring_index(#{tmpDiff},',',1) and
				substring_index(#{tmpDiff},',',-1)
			</if>
			<if test="flow != null and flow != ''"> and a.flow between
				substring_index(#{flow},',',1) and
				substring_index(#{flow},',',-1)
			</if>
			<if test="heat != null and heat != ''"> and a.heat between
				substring_index(#{heat},',',1) and
				substring_index(#{heat},',',-1)
			</if>
			<if test="heatingIndex != null and heatingIndex != ''"> and a.heating_index between
				substring_index(#{heatingIndex},',',1) and
				substring_index(#{heatingIndex},',',-1)
			</if>
			<if test="flowingIndex != null and flowingIndex != ''"> and a.flowing_index between
				substring_index(#{flowingIndex},',',1) and
				substring_index(#{flowingIndex},',',-1)
			</if>
		
		</where>
	</select>
</mapper>