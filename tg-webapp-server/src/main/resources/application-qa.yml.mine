# ===================================================================================
# ======================= system config ↓↓↓↓ ================================================
# ===================================================================================

# -------- mongodb start --------------
## mongodb://user:pwd@ip1:port1,ip2:port2/database
# spring.data.mongodb.uri: mongodb://test:test@192.168.2.62:27017/test
# -------- mongodb end ----------------

# --------------- Spring start ------------------
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class: true
# spring.jpa.properties.hibernate.show_sql: true
spring.jpa.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://58.59.67.182:60010/TGDB?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    # url: jdbc:mysql://localhost:3306/TGDB?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: root
    #password: root
    password: 123456
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #filters: stat,wall,slf4j
    filters: stat,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
# --------------- Spring end ------------------

# ======================= custom config ↓↓↓↓ ===============================================





# ------ ElasticSearch-config start ------
# If you select "true" It means adding ElasticSearch support.
elasticsearch.enable: true
# ES' hosts
elasticsearch.addr: 192.168.2.60:9300,192.168.2.61:9300,192.168.2.62:9300
#elasticsearch.addr.http: 192.168.2.50:9200
# ES' cluster name
elasticsearch.cluster.name: clus
# 是否启用Client阻塞  ,如果true,在es连接池中没有可用连接时,会一直创建
elasticsearch.client.concurrent.limit: true
# ES连接池的大小
elasticsearch.client.queue.size: 10
elasticsearch.client.queue.max.size: 50
elasticsearch.sql.url: 192.168.2.62:9300
# ------ ElasticSearch-config end --------

# ------- Redis-config start ----------
# If you select "true" It means adding redis support.
redis.enable: true
#redis.host: 192.168.2.61
redis.host: localhost
redis.port: 6379
#redis.password: 86a1b907d54bf7010394bf316e183e67
redis.database: 6
redis.pool.max-total: 500
redis.pool.max-idle: 50
redis.pool.max-wait: 100000
redis.pool.min-idle: 8
# ------- Redis-config end -------


mq.enable: kafka
mq.consumer.ids: hahaha1
# ------------ Kafka ----------------------------
bootstraps.servers: 192.168.2.60:9092,192.168.2.61:9092,192.168.2.62:9092
############# Consumer 默认 ###########################
consumer.enable.auto.commit: true
consumer.session.timeout: 25000
consumer.auto.commit.interval: 1000
consumer.max.poll.records: 500
# 默认的消费者组
consumer.group.id: default-1
# [latest, earliest]
consumer.auto.offset.reset: latest
key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
#####################################################
############# Producer 默认 ###########################
producer.retries: 3
producer.batch.size: 4096
producer.linger: 0
producer.buffer.memory: 40960
producer.max.block.ms: 30000
key.serializer: org.apache.kafka.common.serialization.StringSerializer
value.serializer: org.apache.kafka.common.serialization.StringSerializer
#####################################################
###############Topic#################################
#control
control.topic: control_topic1
control.groupId: control_dcgrsoup122
# heat
meter.heat.topic: topic12
meter.heat.groupId: heat_dcgrsoup122

#####################################################

# ------------ Kafka ----------------------------

# --------- communicate start ------------
communicator.enable: false
# <protocol,port> eg.  tcp:50001,udp:5050...
communicator.protocol-ports: tcp:50001,udp:5050,tcp:50500
# --------- communicate  end ------------


# ------------阿里大于配置--------------------------



alidayu.signature: 天罡
alidayu.accessKeyId: dwfdsfsdf
alidayu.accessKeySecret: dssdfgdfgdf


